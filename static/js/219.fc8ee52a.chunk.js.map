{"version":3,"file":"static/js/219.fc8ee52a.chunk.js","mappings":"mTAGaA,EAAeC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8NAazBC,EAAWH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0LAYrBG,EAAUL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wRAiBlBK,EAAeP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iIAQzBO,GAAUT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAYW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,2kB,8PCqBnC,EAtDsB,WACpB,IAAMU,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,GAC3BC,GAAOF,EAAAA,EAAAA,IAAYG,EAAAA,IACnBC,GAAWC,EAAAA,EAAAA,MAWXC,EAAmB,SAAAC,GACvB,IAAMC,EAAcN,EAAKO,QAAO,SAACC,EAAWC,GAC1C,OAAID,IAGGC,EAAYC,KAAOC,OAAON,EAAIO,cAAcF,IAC/CD,EACA,KACN,GAAG,MACHP,GAASW,EAAAA,EAAAA,OACTX,GAASY,EAAAA,EAAAA,IAAWR,GACtB,EAEA,OACES,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAC,SACiB,IAAxBpB,EAAaqB,QACZC,EAAAA,EAAAA,MAAC3B,EAAAA,GAAY,CAAAyB,SAAA,EACXF,EAAAA,EAAAA,KAAC3B,EAAAA,GAAQ,CAACgC,IAAKC,EAAUC,IAAI,cAC7BH,EAAAA,EAAAA,MAAC7B,EAAAA,GAAO,CAAA2B,SAAA,CACL,IAAI,OACFF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,SAAW,YACX,KACXF,EAAAA,EAAAA,KAACrB,EAAAA,GAAO,CAAC6B,GAAG,WAAUN,SAAC,sBAGzBF,EAAAA,EAAAA,KAAC/B,EAAAA,GAAY,CAAAiC,SACVpB,EAAa2B,KAAI,SAAAC,GAAG,OACnBV,EAAAA,EAAAA,KAACW,EAAAA,GAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEEF,GAAG,IACPG,iBAAkB,kBAvCD,SAAAH,GAC3B,IAAMI,EAAahC,EAAaiC,MAAK,SAAAC,GAAM,OAAIA,EAAOrB,KAAOe,EAAIf,EAAE,IAEjER,EADE2B,GACOG,EAAAA,EAAAA,IAAoBP,IAEpBQ,EAAAA,EAAAA,IAAeR,GAE5B,CAgCoCS,CAAqBT,EAAI,EACjDU,YAAa/B,IAHRqB,EAAIf,GAIT,OAMd,E,oBC3CA,EAnBkB,WAChB,IAAM0B,GAActC,EAAAA,EAAAA,IAAYuC,EAAAA,GAC1BC,GAAYxC,EAAAA,EAAAA,IAAYyC,EAAAA,IACxBC,GAAQ1C,EAAAA,EAAAA,IAAY2C,EAAAA,IAE1B,OACEtB,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAAAC,SAAA,CACPuB,IAASzB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAACC,KAAK,oCACxBL,IAAavB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,KACrB7B,EAAAA,EAAAA,KAAC8B,EAAc,IACdT,IACCrB,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CAAA7B,UACRF,EAAAA,EAAAA,KAACgC,EAAAA,EAAY,QAKvB,C","sources":["components/FavoriteItems/FavoriteItemsStyled.js","components/FavoriteItems/FavoriteItems.jsx","pages/Favorite/Favorites.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const FavoriteWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-top: 30px;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n`;\n\nexport const EmptyFav = styled.img`\n  width: 300px;\n  height: 280px;\n\n  @media only screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1280px) {\n    width: 580px;\n    height: 480px;\n  }\n`;\n\nexport const FavText = styled.p`\n  color: var(--main-text);\n  font-size: 28px;\n  text-transform: uppercase;\n  padding-left: 20px;\n\n  @media only screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 34px;\n  }\n\n  span {\n    color: var(--skyblue);\n  }\n`;\n\nexport const ContainerFav = styled.div`\n  padding-top: 40px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LinkFav = styled(Link)`\n  display: flex;\n  width: 124px;\n  padding: 8px 12px;\n  margin-top: 18px;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  border-radius: 12px;\n  background-color: var(--skyblue);\n  color: var(--white);\n  transition: all 0.3s ease-in-out;\n  font-size: 14px;\n  line-height: 1.4;\n  margin-left: auto;\n  margin-right: auto;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    background-color: var(--blue);\n    box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.2),\n      0px 1px 5px 0px rgba(0, 0, 0, 0.14), 0px 2px 5px -1px rgba(0, 0, 0, 0.12);\n  }\n`;\n","import { selectFavoriteCar } from 'redux/favorite/favoriteSelectors';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport {\n  removeFromFavorites,\n  switchFavorite,\n} from 'redux/favorite/favoriteSlice';\nimport { closeModal, openModal } from 'redux/modal/modalSlice';\nimport Car from 'components/Car/Car';\nimport { selectCarData } from 'redux/cars/carsSelectors';\nimport {\n  ContainerFav,\n  EmptyFav,\n  FavText,\n  FavoriteWrap,\n  LinkFav,\n} from './FavoriteItemsStyled';\nimport { Container } from 'components/Container/Container';\nimport imgempty from '../../images/empty_fav.png';\n\nconst FavoriteItems = () => {\n  const favoriteCars = useSelector(selectFavoriteCar);\n  const cars = useSelector(selectCarData);\n  const dispatch = useDispatch();\n\n  const handleSwitchFavorite = car => {\n    const isFavorite = favoriteCars.some(favCar => favCar.id === car.id);\n    if (isFavorite) {\n      dispatch(removeFromFavorites(car));\n    } else {\n      dispatch(switchFavorite(car));\n    }\n  };\n\n  const handleClickModal = evt => {\n    const currentCars = cars.reduce((foundItem, currentItem) => {\n      if (foundItem) {\n        return foundItem;\n      }\n      return currentItem.id === Number(evt.currentTarget.id)\n        ? currentItem\n        : null;\n    }, null);\n    dispatch(openModal());\n    dispatch(closeModal(currentCars));\n  };\n\n  return (\n    <Container>\n      {favoriteCars.length === 0 ? (\n        <ContainerFav>\n          <EmptyFav src={imgempty} alt=\"emptyimg\" />\n          <FavText>\n            {' '}\n            No <span>cars</span> found\n          </FavText>{' '}\n          <LinkFav to=\"/catalog\">Go to Catalog</LinkFav>\n        </ContainerFav>\n      ) : (\n        <FavoriteWrap>\n          {favoriteCars.map(car => (\n            <Car\n              key={car.id}\n              {...car}\n              onSwitchFavorite={() => handleSwitchFavorite(car)}\n              onModalOpen={handleClickModal}\n            />\n          ))}\n        </FavoriteWrap>\n      )}\n    </Container>\n  );\n};\n\nexport default FavoriteItems;\n","import { useSelector } from 'react-redux';\nimport { selectIsOpen } from 'redux/modal/modalSelectors';\nimport ModalForm from 'components/Modal/ModalForm';\nimport ModalDetails from 'components/Modal/ModalDetails';\nimport { Container } from 'components/Container/Container';\nimport FavoritesItems from 'components/FavoriteItems/FavoriteItems';\nimport { selectError, selectIsLoading } from 'redux/cars/carsSelectors';\nimport { ErrorImg } from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Favorites = () => {\n  const isModalOpen = useSelector(selectIsOpen);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <Container>\n      {error && <ErrorImg text=\"Oops... Something went wrong...\" />}\n      {isLoading && <Loader />}\n      <FavoritesItems />\n      {isModalOpen && (\n        <ModalForm>\n          <ModalDetails />\n        </ModalForm>\n      )}\n    </Container>\n  );\n};\n\nexport default Favorites;\n"],"names":["FavoriteWrap","styled","_templateObject","_taggedTemplateLiteral","EmptyFav","_templateObject2","FavText","_templateObject3","ContainerFav","_templateObject4","LinkFav","Link","_templateObject5","favoriteCars","useSelector","selectFavoriteCar","cars","selectCarData","dispatch","useDispatch","handleClickModal","evt","currentCars","reduce","foundItem","currentItem","id","Number","currentTarget","openModal","closeModal","_jsx","Container","children","length","_jsxs","src","imgempty","alt","to","map","car","Car","_objectSpread","onSwitchFavorite","isFavorite","some","favCar","removeFromFavorites","switchFavorite","handleSwitchFavorite","onModalOpen","isModalOpen","selectIsOpen","isLoading","selectIsLoading","error","selectError","ErrorImg","text","Loader","FavoritesItems","ModalForm","ModalDetails"],"sourceRoot":""}