{"version":3,"file":"static/js/276.2f075ceb.chunk.js","mappings":"+UAEaA,EAAWC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4EAMrBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iO,mBCwEjC,EA9DiB,WACf,IAAMG,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,GAC3BC,GAAcJ,EAAAA,EAAAA,IAAYK,EAAAA,GAChCC,GAAsCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BI,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACX,GAAG,CAACH,IAEJ,IAQMI,EAAmB,SAAAC,GACvB,IAAMC,EAAcnB,EAAKoB,QAAO,SAACC,EAAWC,GAC1C,OAAID,IAGGC,EAAYC,KAAOC,OAAON,EAAIO,cAAcF,IAC/CD,EACA,KACN,GAAG,MACHT,GAASa,EAAAA,EAAAA,OACTb,GAASc,EAAAA,EAAAA,IAAWR,GACtB,EAMA,OACES,EAAAA,EAAAA,MAAClC,EAAQ,CAAAmC,SAAA,EACPC,EAAAA,EAAAA,KAAChC,EAAQ,CAAA+B,SACN7B,EAAK+B,MAAM,EAAGpB,GAAaqB,KAAI,SAAAC,GAC9B,OACEH,EAAAA,EAAAA,KAACI,EAAAA,GAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEEF,GAAG,IACPG,iBAAkB,kBAjCD,SAAAH,GACvB9B,EAAakC,MAAK,SAAAC,GAAM,OAAIA,EAAOf,KAAOU,EAAIV,EAAE,IAClDV,GAAS0B,EAAAA,EAAAA,IAAoBN,IAE7BpB,GAAS2B,EAAAA,EAAAA,IAAeP,GAE5B,CA2BoCQ,CAAqBR,EAAI,EACjDS,YAAazB,IAHRgB,EAAIV,GAMf,MAEDZ,EAAcX,EAAK2C,SAClBb,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CAACC,QAnBI,WACnBjC,GAAe,SAAAkC,GAAS,OAAIA,EAAY,CAAC,GAC3C,EAiBuCjB,SAAC,cAEnCxB,IACCyB,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAAlB,UACRC,EAAAA,EAAAA,KAACkB,EAAAA,EAAY,QAKvB,E,8BC3DA,EAZgB,WACd,IAAMC,GAAYhD,EAAAA,EAAAA,IAAYiD,EAAAA,IACxBC,GAAQlD,EAAAA,EAAAA,IAAYmD,EAAAA,IAC1B,OACExB,EAAAA,EAAAA,MAACyB,EAAAA,EAAS,CAAAxB,SAAA,CACPsB,IAASrB,EAAAA,EAAAA,KAACwB,EAAAA,EAAQ,CAACC,KAAK,oCACxBN,IAAanB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,KACrB1B,EAAAA,EAAAA,KAAC2B,EAAQ,MAGf,C","sources":["components/CarsList/CarsListStyled.js","components/CarsList/CarsList.jsx","pages/Catalog/Catalog.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapList = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 30px;\n`;\n\nexport const CardList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 30px;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n`;\n","import Car from 'components/Car/Car';\nimport ModalDetails from 'components/Modal/ModalDetails';\nimport ModalForm from 'components/Modal/ModalForm';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCars } from 'redux/api';\nimport { selectCarData } from 'redux/cars/carsSelectors';\nimport { selectFavoriteCar } from 'redux/favorite/favoriteSelectors';\nimport {\n  removeFromFavorites,\n  switchFavorite,\n} from 'redux/favorite/favoriteSlice';\nimport { selectIsOpen } from 'redux/modal/modalSelectors';\nimport { closeModal, openModal } from 'redux/modal/modalSlice';\nimport { CardList, WrapList } from './CarsListStyled';\nimport { BtnStyled } from 'components/Button/ButtonStyled';\n\nconst CarsList = () => {\n  const cars = useSelector(selectCarData);\n  const favoriteCars = useSelector(selectFavoriteCar);\n  const isModalOpen = useSelector(selectIsOpen);\n  const [visibleCars, setVisibleCars] = useState(8);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCars());\n  }, [dispatch]);\n\n  const handleSwitchFavorite = car => {\n    if (favoriteCars.some(favCar => favCar.id === car.id)) {\n      dispatch(removeFromFavorites(car));\n    } else {\n      dispatch(switchFavorite(car));\n    }\n  };\n\n  const handleClickModal = evt => {\n    const currentCars = cars.reduce((foundItem, currentItem) => {\n      if (foundItem) {\n        return foundItem;\n      }\n      return currentItem.id === Number(evt.currentTarget.id)\n        ? currentItem\n        : null;\n    }, null);\n    dispatch(openModal());\n    dispatch(closeModal(currentCars));\n  };\n\n  const loadMoreCars = () => {\n    setVisibleCars(prevState => prevState + 8);\n  };\n\n  return (\n    <WrapList>\n      <CardList>\n        {cars.slice(0, visibleCars).map(car => {\n          return (\n            <Car\n              key={car.id}\n              {...car}\n              onSwitchFavorite={() => handleSwitchFavorite(car)}\n              onModalOpen={handleClickModal}\n            />\n          );\n        })}\n      </CardList>\n      {visibleCars < cars.length && (\n        <BtnStyled onClick={loadMoreCars}>Load More</BtnStyled>\n      )}\n      {isModalOpen && (\n        <ModalForm>\n          <ModalDetails />\n        </ModalForm>\n      )}\n    </WrapList>\n  );\n};\n\nexport default CarsList;\n","import { useSelector } from 'react-redux';\nimport CarsList from 'components/CarsList/CarsList';\nimport { Container } from 'components/Container/Container';\nimport { selectError, selectIsLoading } from 'redux/cars/carsSelectors';\nimport { ErrorImg } from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Catalog = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <Container>\n      {error && <ErrorImg text=\"Oops... Something went wrong...\" />}\n      {isLoading && <Loader />}\n      <CarsList />\n    </Container>\n  );\n};\n\nexport default Catalog;\n"],"names":["WrapList","styled","_templateObject","_taggedTemplateLiteral","CardList","_templateObject2","cars","useSelector","selectCarData","favoriteCars","selectFavoriteCar","isModalOpen","selectIsOpen","_useState","useState","_useState2","_slicedToArray","visibleCars","setVisibleCars","dispatch","useDispatch","useEffect","fetchCars","handleClickModal","evt","currentCars","reduce","foundItem","currentItem","id","Number","currentTarget","openModal","closeModal","_jsxs","children","_jsx","slice","map","car","Car","_objectSpread","onSwitchFavorite","some","favCar","removeFromFavorites","switchFavorite","handleSwitchFavorite","onModalOpen","length","BtnStyled","onClick","prevState","ModalForm","ModalDetails","isLoading","selectIsLoading","error","selectError","Container","ErrorImg","text","Loader","CarsList"],"sourceRoot":""}